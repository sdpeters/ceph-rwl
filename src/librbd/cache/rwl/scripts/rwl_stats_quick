#!/bin/bash
#jq '.stats |keys[0] as $x | .[$x] | { rd: .rd, rd_bytes: .rd_bytes, rd_latency_ms: (.rd_latency.avgtime * 1000), wr: .wr, wr_bytes: .wr_bytes, wr_latency_ms: (.wr_latency.avgtime * 1000), caller_wr_latency_ms: (.caller_wr_latency.avgtime * 1000), wr_overlap: .wr_overlap, aio_flush: .aio_flush, aio_flush_lat_ms: (.aio_flush_lat.avgtime * 1000), log_ops: .log_ops, req_all_to_dis_t_us: (.req_all_to_dis_t.avgtime * 1000000), op_dis_to_buf_t_us: (.op_dis_to_buf_t.avgtime * 1000000), op_buf_to_bufc_t_us: (.op_buf_to_bufc_t.avgtime * 1000000), op_app_to_appc_t_us: (.op_app_to_appc_t.avgtime * 1000000)}'
jq '{
test_time: (.test_time),
rbd_vol: (.stats|keys[0]),
rd: (.stats[.stats|keys[0]].rd), 
rd_bytes: (.stats[.stats|keys[0]].rd_bytes), 
rd_latency_ms: (.stats[.stats|keys[0]].rd_latency.avgtime * 1000), 
wr: (.stats[.stats|keys[0]].wr), 
wr_bytes: (.stats[.stats|keys[0]].wr_bytes), 
wr_latency_ms: (.stats[.stats|keys[0]].wr_latency.avgtime * 1000), 
caller_wr_latency_ms: (.stats[.stats|keys[0]].caller_wr_latency.avgtime * 1000), 
wr_overlap: (.stats[.stats|keys[0]].wr_overlap), 
aio_flush: (.stats[.stats|keys[0]].aio_flush), 
aio_flush_lat_ms: (.stats[.stats|keys[0]].aio_flush_lat.avgtime * 1000), 
log_ops: (.stats[.stats|keys[0]].log_ops), 
req_all_to_dis_t_us: (.stats[.stats|keys[0]].req_all_to_dis_t.avgtime * 1000000), 
op_dis_to_buf_t_us: (.stats[.stats|keys[0]].op_dis_to_buf_t.avgtime * 1000000), 
op_buf_to_bufc_t_us: (.stats[.stats|keys[0]].op_buf_to_bufc_t.avgtime * 1000000), 
op_app_to_appc_t_us: (.stats[.stats|keys[0]].op_app_to_appc_t.avgtime * 1000000)
}'
